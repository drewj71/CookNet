@inherits LayoutComponentBase
@implements IDisposable
@using Microsoft.AspNetCore.Identity
@using CookNet.Data
@using CookNet.Components.Account
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<MudThemeProvider />
<MudPopoverProvider /> 
<MudDialogProvider />
<MudSnackbarProvider />
<HeadOutlet />

<div class="page">
    <div class="sidebar @(NavMenuClass)">
        <div class="top-row-navbar ps-3 navbar">
            <div class="container-fluid d-flex justify-content-center align-items-center">
                <a class="navbar-brand @(NavItemsClass)" href="">CookNet</a>
            </div>
        </div>
        <NavMenu IsNavMenuVisible="IsNavMenuVisible" />
    </div>

    <main>
        <div class="top-row px-4">
            <button type="button" class="navbar-toggler" @onclick="ToggleNavMenu">
                <i class="fa-solid fa-bars"></i>
            </button>
            <div class="d-flex justify-content-end align-items-center">
                <AuthorizeView>
                    <Authorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link profpic" href="@($"/users/{context.User.Identity?.Name}")">
                                <ProfilePictureIcon />
                            </NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                <button type="submit" class="btn btn-danger">
                                    <span class="bi bi-arrow-bar-left" aria-hidden="true"></span> Logout
                                </button>
                            </form>
                        </div>
                    </Authorized>
                    <NotAuthorized>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Register">
                                <button type="submit" class="btn btn-primary">
                                    <span class="bi bi-person" aria-hidden="true"></span> Register
                                </button>
                            </NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="Account/Login">
                                <button type="submit" class="btn btn-success">
                                    <span class="bi bi-person-badge" aria-hidden="true"></span> Login
                                </button>
                            </NavLink>
                        </div>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <article class="content main-page">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private string? currentUrl;
    private bool IsNavMenuVisible { get; set; } = true;
    private string NavMenuClass { get; set; } = "navmenu-visible";
    private string NavItemsClass { get; set; } = "navitems-visible";

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

    private void ToggleNavMenu()
    {
        IsNavMenuVisible = !IsNavMenuVisible;
        NavMenuClass = IsNavMenuVisible ? "navmenu-visible" : "navmenu-hidden";
        NavItemsClass = IsNavMenuVisible ? "navitems-visible" : "navitems-hidden";
    }
}
