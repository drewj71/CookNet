@page "/recipes/{RecipeId}"
@using CookNet.Data
@using Microsoft.AspNetCore.Identity
@inject RecipeService RecipeService
@rendermode InteractiveServer

@if (Recipe != null)
{
    <div>
        <h4>@Recipe.Name</h4>
        <p>Author: <a class="text-decoration-none" href=@($"/users/{AuthorUserName}")>@("@")@AuthorUserName</a></p>
        <img src="@Recipe.ThumbnailImage" alt="RecipeThumbnail" class="img-fluid border rounded shadow m-2 p-2" style="width: 1920px; height: 1080px;">
        <p>@Recipe.Description</p>
        @if (@Recipe.AdditionalImages != null) 
        {
            @foreach (var image in @Recipe.AdditionalImages)
            {
                <img src="@image" alt="AdditionalImages" class="img-fluid w-100 border rounded shadow m-2 p-2">
            }
        }
        @if (Recipe.RecipeStories != null)
        {
            @foreach (var story in @Story)
            {
                <p>@($"{story.StoryText}")</p>
            }
        }
        <p>Prep Time: @Recipe.PrepTime mins</p>
        <p>Cook Time: @Recipe.CookTime mins</p>
        <p>Category: @Recipe.Category</p>
        @if (Recipe.Ethnicity != "NA")
        {
            <p>Ethnicity: @Recipe.Ethnicity</p>
        }
        <h5>Ingredients:</h5>
        <ul>
            @foreach (var ingredient in @RecipeIngredients)
            {
                <li>@($"{ingredient.Quantity} {ingredient.QuantityUnit} {ingredient.Name}")</li>
            }
        </ul>
        <h6>Instructions:</h6>
        <ul>
            @foreach (var instruction in @Instructions)
            {
                <li>@($"{instruction.StepNumber}. {instruction.InstructionText}")</li>
            }
        </ul>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Inject]
    private UserManager<ApplicationUser> UserManager { get; set; }

    private Recipe Recipe;
    private List<Ingredient> RecipeIngredients = [];
    private List<RecipeStory> Story = [];
    private List<Instruction> Instructions = [];
    private string AuthorUserName;

    [Parameter]
    public string RecipeId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(RecipeId, out int recipeId))
        {
            Recipe = await RecipeService.GetRecipeByIdAsync(recipeId);
            RecipeIngredients = await RecipeService.GetAllIngredientsAsync();
            Story = await RecipeService.GetRecipeStoryAsync();
            Instructions = await RecipeService.GetAllInstructionsAsync();

            if (Recipe != null)
            {
                var author = await UserManager.FindByIdAsync(Recipe.AuthorID);
                AuthorUserName = author?.UserName ?? "Anonymous";
            }
        }
    }
}
