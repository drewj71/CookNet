@page "/users/{UserName}"
@using CookNet.Data
@using Microsoft.AspNetCore.Identity
@inject IUserService UserService
@inject RecipeService RecipeService
@rendermode InteractiveServer

@if (User != null)
{
    <div class="profile-picture-container position-relative">
        @if (@User.ProfilePictureBase64 != null)
        {
            <div class="position-relative d-inline-block">
                <!-- Profile Picture -->
                <img src="@User.ProfilePictureBase64" alt="Profile Picture" class="profile-picture img-fluid w-20 border rounded shadow m-2 p-2">

                <!-- Edit Icon -->
                <div class="edit-icon position-absolute bottom-0 end-0 p-2 mr-2">
                    <a href="edit-profile-picture"><i class="fa fa-pen"></i></a>
                </div>
            </div>
        }
        else
        {
            <div class="position-relative d-inline-block">
                <i class="bi bi-person-circle" style="font-size: 8rem;"></i>

                <!-- Edit Icon -->
                <div class="edit-icon">
                    <a href="edit-profile-picture"><i class="fa fa-pen"></i></a>
                </div>
            </div>
        }
    </div>
    <div class="user-header-container col-md-10 position-relative pt-2">
        <div class="row">
            <div class="col-md-6">
                <div class="display-name">
                    <h3>@User.DisplayName</h3>
                </div>
            </div>
            <div class="col-md-6 text-md-end pt-1">
                <div class="edit-profile-btn">
                    <p><a href="/Account/Manage" class="btn btn-primary">Edit Profile</a></p>
                </div>
            </div>
        </div>
        <div class="userinfo-container">
            <p class="username">@("@")@User.UserName</p>
            <p class="bio">@User.Biography</p>
            <div class="joined-date-container">
                <i class="fa-solid fa-calendar-days"></i>
                <p class="join-date">Joined @User.RegistrationDate.ToShortDateString()</p>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Profile tabs -->
        <div class="row mt-3">
            <div class="col-md-6">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                            <a class="nav-link @(showRecipes ? "active" : "")" @onclick="ShowRecipes" style="cursor:pointer;">Recipes</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(showRecipes ? "" : "active")" @onclick="ShowInsights" style="cursor:pointer;">Insights</a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Profile content -->
        <div class="row mt-3">
            <div class="col-md-6">
                @if (showRecipes)
                {
                    <!-- Recipe list -->
                    <div class="card-columns">
                        @if (UserRecipes != null && UserRecipes.Any())
                        {
                            @foreach (var recipe in UserRecipes)
                            {
                                <div class="card" style="width: 18rem;">
                                    <a class="text-decoration-none" href="@($"/recipes/{recipe.ID}")">
                                        <img class="card-img-top" src="@recipe.ThumbnailImage" alt="@recipe.Name" style="height: 200px; object-fit: cover;">
                                    <div class="card-body">
                                        <h5 class="card-title">@recipe.Name</h5>
                                        <p class="cook-time">Time: @recipe.CookTime mins</p>
                                    </div>
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No recipes found.</p>
                        }
                    </div>
                }
                else
                {
                    <!-- Insights -->
                    <!-- Display insights here -->
                }
            </div>
        </div>
    </div>
}
else
{
    <p>User not found.</p>
}

@code {
    [Parameter]
    public string UserName { get; set; }

    private ApplicationUser User;
    private List<Recipe> UserRecipes;
    private bool showRecipes = true;

    protected override async Task OnInitializedAsync()
    {
        User = await UserService.GetUserByUsernameAsync(UserName);
        if (User != null)
        {
            UserRecipes = await RecipeService.GetRecipesByAuthorAsync(User.Id);
        }
    }

    private void ShowRecipes()
    {
        showRecipes = true;
    }

    private void ShowInsights()
    {
        showRecipes = false;
    }
}
