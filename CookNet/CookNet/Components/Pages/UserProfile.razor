@page "/users/{UserName}"
@using CookNet.Data
@using Microsoft.AspNetCore.Identity
@inject IUserService UserService
@inject RecipeService RecipeService
@rendermode InteractiveServer

@if (User != null)
{
    <div>
        @if (@User.ProfilePictureBase64 != null)
        {
            <img src="@User.ProfilePictureBase64" alt="RecipeThumbnail" class="img-fluid w-100 border rounded shadow m-2 p-2">
        }
        else
        {
            <a href=""><i class="bi bi-person-circle" style="font-size: 8rem;"></i></a>
        }
    </div>
    <h3>@User.FullName</h3>
    <p>@("@")@User.UserName</p>

    <div class="container">
        <!-- User information -->
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">User Information</h5>
                        <p class="card-text">Date Joined: @User.RegistrationDate.ToShortDateString()</p>
                        <p class="card-text">Biography: @User.Biography</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Profile tabs -->
        <div class="row mt-3">
            <div class="col-md-6">
                <ul class="nav nav-tabs">
                    <li class="nav-item">
                        <a class="nav-link @(showRecipes ? "active" : "")" @onclick="ShowRecipes">Recipes</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link @(showRecipes ? "" : "active")" @onclick="ShowInsights">Insights</a>
                    </li>
                </ul>
            </div>
        </div>

        <!-- Profile content -->
        <div class="row mt-3">
            <div class="col-md-6">
                @if (showRecipes)
                {
                    <!-- Recipe list -->
                    <div class="card-columns">
                        @if (UserRecipes != null && UserRecipes.Any())
                        {
                            @foreach (var recipe in UserRecipes)
                            {
                                <div class="card">
                                    <a class="text-decoration-none" href="@($"/recipes/{recipe.ID}")">
                                    <img class="card-img-top" src="@recipe.ThumbnailImage" alt="@recipe.Name">
                                    <div class="card-body">
                                        <h5 class="card-title">@recipe.Name</h5>
                                    </div>
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No recipes found.</p>
                        }
                    </div>
                }
                else
                {
                    <!-- Insights -->
                    <h4>Insights</h4>
                    <!-- Display insights here -->
                }
            </div>
        </div>
    </div>
}
else
{
    <p>User not found.</p>
}

@code {
    [Parameter]
    public string UserName { get; set; }

    private ApplicationUser User;
    private List<Recipe> UserRecipes;
    private bool showRecipes = true;

    protected override async Task OnInitializedAsync()
    {
        User = await UserService.GetUserByUsernameAsync(UserName);
        if (User != null)
        {
            UserRecipes = await RecipeService.GetRecipesByAuthorAsync(User.Id);
        }
    }

    private void ShowRecipes()
    {
        showRecipes = true;
    }

    private void ShowInsights()
    {
        showRecipes = false;
    }
}
