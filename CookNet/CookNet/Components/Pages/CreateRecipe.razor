@page "/create-recipe"

@using CookNet.Data
@inject RecipeService RecipeService
@inject Microsoft.AspNetCore.Identity.UserManager<ApplicationUser> UserManager
@inject Microsoft.AspNetCore.Components.Authorization.AuthenticationStateProvider AuthenticationStateProvider

<h3>Post a Recipe!</h3>

<form @onsubmit="CreateNewRecipe">
    <label>Name:</label>
    <input type="text" @bind="recipeName" />

    <label>Description:</label>
    <input type="text" @bind="recipeDescription" />

    <label>Cook Time (Hours):</label>
    <input type="number" @bind="hours" />

    <label>Cook Time (Minutes):</label>
    <input type="number" @bind="minutes" />

    <div>
        <h4>Ingredients</h4>
        <div>
            <label>Ingredient Name:</label>
            <input type="text" @bind="ingredientName" />

            <label>Quantity:</label>
            <input type="number" @bind="ingredientQuantity" />

            <label>Unit:</label>
            <select @bind="ingredientUnit">
                <option value="teaspoon">tsp</option>
                <option value="tablespoon">Tbsp</option>
                <option value="cup">cup</option>
                <option value="grams">g</option>
                <option value="oz">oz</option>
                <option value="cloves">clove</option>
            </select>

            <button type="button" @onclick="AddIngredient">Add Ingredient</button>
        </div>
        <!-- Display added ingredients -->
        <ul>
            @foreach (var ingredient in addedIngredients)
            {
                <li>@ingredient.Name: @ingredient.Quantity @ingredient.QuantityUnit</li>
            }
        </ul>
    </div>

    <label>Instructions:</label>
    <textarea @bind-="recipeInstructions"></textarea>

    <label>Ethnicity:</label>
    <input type="text" @bind="recipeEthnicity" />

    <label>Category:</label>
    <input type="text" @bind="recipeCategory" />

    <button type="submit">Post Recipe</button>
</form>

@code {
    private string recipeName;
    private string recipeDescription;
    private int hours;
    private int minutes;
    private string recipeInstructions;
    private string recipeEthnicity;
    private string recipeCategory;
    private int TotalCookTime => (hours * 60) + minutes;

    private string ingredientName;
    private int ingredientQuantity;
    private string ingredientUnit;
    private List<IngredientViewModel> addedIngredients = new List<IngredientViewModel>();

    public class IngredientViewModel
    {
        public string Name { get; set; }
        public int Quantity { get; set; }
        public string QuantityUnit { get; set; }
    }

    private async Task AddIngredient()
    {
        var newIngredient = new IngredientViewModel
            {
                Name = ingredientName,
                Quantity = ingredientQuantity,
                QuantityUnit = ingredientUnit
            };
        addedIngredients.Add(newIngredient);

        ingredientName = "";
        ingredientQuantity = 0;
        ingredientUnit = "teaspoon";
    }

    private void RemoveIngredient(IngredientViewModel ingredient)
    {
        addedIngredients.Remove(ingredient);
    }

    private async Task CreateNewRecipe()
    {
        async Task<AuthenticationState> GetAuthenticationStateAsync()
        {
            return await AuthenticationStateProvider.GetAuthenticationStateAsync();
        }

        var recipe = new Recipe()
            {
                Name = recipeName,
                Description = recipeDescription,
                DateCreated = DateTime.UtcNow,
                CookTime = TotalCookTime,
                Ethnicity = recipeEthnicity,
                Category = recipeCategory,
            };
        await RecipeService.CreateRecipeAsync(recipe);
    }
}