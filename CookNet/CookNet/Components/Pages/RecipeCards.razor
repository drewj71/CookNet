@using CookNet.Data
@using Microsoft.AspNetCore.Components

<div class="card-columns pb-3">
    @foreach (var recipe in Recipes)
    {
        int totalCookTime = recipe.CookTime + recipe.PrepTime;
        string hrsOrMins = "";
        if (totalCookTime > 120)
        {
            totalCookTime = 2;
            hrsOrMins = "hrs";
        }
        else if (totalCookTime > 60)
        {
            totalCookTime = 1;
            hrsOrMins = "hr";
        }
        else
        {
            hrsOrMins = "mins";
        }
        <div class="card">
            <a class="text-decoration-none" href="@($"/recipes/{recipe.ID}")">
                <div class="image-container position-relative">
                    <img class="card-img-top" src="@recipe.ThumbnailImage" title="@recipe.Name">
                    <p class="cook-time" title="Total Cook Time">@totalCookTime @hrsOrMins</p>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@recipe.Name</h5>
                    <div class="card-meta">
                        <a class="username-nav" href="@($"/users/{recipe.Author.UserName}")">@("@")@recipe.Author.UserName</a>
                        <p class="date-created">@recipe.DateCreated.ToShortDateString()</p>
                    </div>
                </div>
            </a>
            <button class="bookmark-recipe" @onclick="@(async () => await OnBookmarkClicked.InvokeAsync(recipe.ID))" title="Save to Cookbook">
                <i class="cookbooks-icon bi bi-journal-bookmark-fill"></i>
            </button>
        </div>
    }
</div>

@code {
    [Parameter]
    public List<Recipe> Recipes { get; set; } = new();

    [Parameter]
    public EventCallback<int> OnBookmarkClicked { get; set; }
}
